{"version":3,"sources":["components/EditableInput.js","components/ContactInfo.js","components/SkillForm.js","components/SkillSection.js","components/Work.js","components/WorkForm.js","components/WorkSection.js","components/Reference.js","components/ReferenceForm.js","components/ReferenceSection.js","App.js","index.js"],"names":["EditableInput","props","useState","editing","setEditing","node","useRef","name","label","value","handleChange","className","preview","handleClickOutside","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","onSubmit","preventDefault","ref","onChange","placeholder","onClick","result","replace","charAt","toUpperCase","slice","getName","ContactInfo","firstName","lastName","occupation","email","phone","street","cityState","contactInfo","setContactInfo","ÃŸ","SkillForm","handleSubmit","maxLength","type","SkillSection","skills","setSkills","skillInput","setSkillInput","handleSkillClick","content","innerText","newSkills","filter","skill","allSkills","map","uniqid","Work","experiences","setExperiences","experience","organization","position","from","to","description","editedExperience","setEditedExperience","updatedExperiences","id","createInput","key","handleClick","format","WorkForm","required","rows","WorkSection","setExperience","allWork","textContent","Reference","reference","references","setReferences","relationship","editedReference","setEditedReference","split","updatedReferences","ReferenceForm","ReferenceSection","setReference","allReferences","App","setPreview","window","print","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4dbcffa0.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\n\nconst EditableInput = (props) => {\n  const [ editing, setEditing ] = useState(false)\n  const node = useRef();\n\n  const {\n    name,\n    label,\n    value,\n    handleChange,\n    className,\n    preview\n  } = props\n\n  const handleClick = () => {\n    if (preview === false) {\n      setEditing(true) \n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setEditing(false)\n  }\n\n  const handleClickOutside = e  => {\n    if (node.current.contains(e.target)) {\n      return\n    } \n    setEditing(false)\n  }\n\n  useEffect(() => {\n    if (editing) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ editing ])\n\n  const getName = () => {\n    let result = name.replace( /([A-Z])/g, \" $1\" );\n    return result.charAt(0).toUpperCase() + result.slice(1);  \n  }\n\n  if(editing === true && preview === false) {\n    return (\n      <form onSubmit={handleSubmit} ref={node} className='name-form'>\n        <label> {label} </label>\n        {className === 'address' ? <button>+</button> : null}\n        <input\n          name={name} \n          value={value}\n          onChange={handleChange}\n          placeholder={label}\n          className= {`${className}-input`}\n        />\n        {className !== 'address' ? <button>+</button> : null}\n      </form>\n    )\n  } else {\n    return <p onClick={handleClick} className={className}>{value === '' ? getName() : value}</p>\n  }\n\n}\n\nexport default EditableInput\n","import React, { useState } from 'react'\nimport EditableInput from './EditableInput'\n// eslint-disable-next-line no-unused-vars\nimport '../styles/contactInfo.css'\n\nconst ContactInfo= (props) => {\n  const { preview } = props\n\n  const [ contactInfo, setContactInfo ] = useState({\n    firstName: '',\n    lastName: '',\n    occupation: '',\n    email: '',\n    phone: '',\n    street: '',\n    cityState: '',\n  })\n\n  const handleChange = (e) => {\n    const { value, name } = e.target\n    setContactInfo({...contactInfo, [name]: value })\n  }\n\n  return (\n    <div className='contact-info'>\n      <div className='name-container'>\n        <EditableInput \n            label='First Name'\n            name='firstName'\n            value={contactInfo.firstName}\n            handleChange={handleChange}\n            className='name'\n            preview={preview}\n          />\n        <EditableInput \n          label='Last Name'\n          name='lastName'ÃŸ\n          value={contactInfo.lastName}\n          handleChange={handleChange}\n          className='name'\n          preview={preview}\n        />\n        <EditableInput \n          label='Occupation'\n          name='occupation'\n          value={contactInfo.occupation}\n          handleChange={handleChange}\n          className='occupation'\n          preview={preview}\n        />\n      </div>\n      <div className='address-container'>\n          <EditableInput \n            label='Street'\n            name='street'\n            value={contactInfo.street}\n            handleChange={handleChange}\n            className='address'\n            preview={preview}\n          />\n          <EditableInput \n            label='City/State'\n            name='cityState'\n            value={contactInfo.cityState}\n            handleChange={handleChange}\n            className='address'\n            preview={preview}\n          />\n          <EditableInput \n            label='Email'\n            name='email'\n            value={contactInfo.email}\n            handleChange={handleChange}\n            className='address'\n            preview={preview}\n          />\n          <EditableInput \n            label='Phone No.'\n            name='phone'\n            value={contactInfo.phone}\n            handleChange={handleChange}\n            className='address'\n            preview={preview}\n          />\n        </div>\n    </div>\n  )\n}\n\nexport default ContactInfo\n","import React from 'react'\n\nconst SkillForm= (props) => {\n  const {\n    name,\n    handleSubmit,\n    node,\n    label,\n    value,\n    handleChange,\n  } = props\n\n  return (\n    <form \n      onSubmit={handleSubmit} \n      ref={node}\n      className='skill-form'\n    >\n      <label>{label}</label>\n      <input \n        name={name} \n        value={value}\n        onChange={handleChange}\n        placeholder='something useful...'\n        maxLength='30'\n      />\n      <button type='submit'>+</button>\n    </form>\n  )\n}\n\nexport default SkillForm\n","import React, { useState, useRef, useEffect } from 'react'\nimport uniqid from 'uniqid'\nimport SkillForm from './SkillForm'\n\nimport '../styles/skills.css'\n\nconst SkillSection = (props) => {\n  const { preview } = props\n\n  const [ editing, setEditing] = useState(false)\n  const [ skills, setSkills ] = useState([])\n  const [ skillInput, setSkillInput ] = useState('')\n\n  const node = useRef()\n\n  const handleSkillClick = (e) => {\n    if (preview !== true) {\n      const content = e.target.innerText\n      const newSkills = skills.filter(skill => skill !== content)\n      setSkills(newSkills)\n    }\n  }\n\n  const handleClickOutside = e  => {\n    if (node.current.contains(e.target)) {\n      return\n    } \n    setEditing(false)\n  }\n\n  useEffect(() => {\n    if (editing) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ editing ])\n\n  const allSkills = skills.map(skill => \n    <li \n      key={uniqid()} \n      className={`skill ${preview ? 'skill-preview': 'skill-no-preview'}`}\n      onClick={handleSkillClick}\n    >{skill}</li>)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setEditing(false)\n    if (skillInput !== '') {\n      setSkills([...skills, skillInput])\n      setSkillInput('')\n    }\n  }\n\n  const handleChange = (e) => {\n    const { value } = e.target\n      setSkillInput(value) \n  }\n\n  const handleClick = () =>  {\n    setEditing(true)\n  }\n\n  if (preview === false) {\n    return (\n      <div className={`skill-section ${preview ? 'preview' : 'no-preview'}`}>\n        <div className='header'>\n          <h2 className='header-text'>Skills</h2>\n          { editing ? <SkillForm\n                          handleSubmit={handleSubmit}\n                          name={skillInput}\n                          label='skill'\n                          value={skillInput}\n                          handleChange={handleChange}\n                          className={`skill-input`}\n                          node={node}\n                        /> : null }\n          { editing ? null : <button onClick={handleClick} className='header-button'>+</button> }\n        </div>\n        <ul className={`skill-container-${preview ? 'preview' : 'no-preview'}`}>\n          {allSkills}\n        </ul>\n      </div>\n    )\n  } else {\n      return (\n        <div className='skill-section'>\n          <div className='header'>\n            <h2 className='header-text'>Skills</h2>\n            <ul className='skill-container'>\n                  {allSkills}\n            </ul>\n          </div>\n        </div>\n      )\n    }\n}\n\nexport default SkillSection","import React, { useState } from 'react'\nimport Moment from 'react-moment'\n\n\nconst Work = (props) => {\n  const { experiences, setExperiences, experience, preview } = props\n  const { organization, position, from, to, description } = experience\n\n  const [ editing, setEditing ] = useState({\n    organization: false,\n    position: false,\n    to: false,\n    from: false,\n    description: false\n  })\n  const [ editedExperience, setEditedExperience ] = useState(experience)\n\n\n  const handleChange = (e) =>  {\n    const { value, name } = e.target\n    setEditedExperience({...experience, [name]: value})\n  }\n\n  const handleSubmit = (e) => {\n    const name = e.target[0].name\n    e.preventDefault()\n    const updatedExperiences = experiences.map( experience => {\n      if (experience.id === editedExperience.id) {\n        return editedExperience\n      } else {\n        return experience\n      }\n    })\n    setExperiences(updatedExperiences)\n    setEditing({...editing, [name]: false})\n  }\n\n\n  const createInput = (key) =>  {\n    if(key === 'description') {\n      return (\n        <form onSubmit={handleSubmit} className='edit-input'>\n          <label>{key}</label>\n          <textarea \n            name={key}\n            value={editedExperience[key]}\n            onChange={handleChange}\n            className={`${key}-input`}\n          /> \n          <button>Update</button>\n        </form>\n      )\n    } else {\n      return (\n        <form onSubmit={handleSubmit} className='edit-input'>\n          <label>{key}</label>\n          <input \n            type={(key === 'to'||key === 'from') ? 'date' : 'text'}\n            name={key}\n            value={editedExperience[key]}\n            onChange={handleChange}\n            className={`${key}-input`}\n          /> \n          <button>{(key === 'to'||key === 'from') ? '+' : 'Update'}</button>\n        </form>\n      )\n    }\n  }\n\n  const handleClick = (e) => {\n    const { className } = e.target\n    if (preview === false) { setEditing({...editing, [className]: true}) }\n  }\n\n  return (\n    <div className='work'>\n      {editing.organization ?  createInput('organization') : <h3 className='organization' onClick={handleClick}>{organization}</h3>}\n      {editing.position ?  createInput('position') : <p className='position' onClick={handleClick}>{position}</p>}\n      <div className='timing'>\n        <div>\n        {editing.from ?  createInput('from') : <Moment format='MMMM YYYY' className='from' onClick={handleClick}>{from}</Moment>}\n        </div>\n        <p>--</p>\n        <div>\n        {editing.to ?  createInput('to') : <Moment format='MMMM YYYY' className='to' onClick={handleClick}>{to}</Moment>}\n        </div>\n      </div>\n      {editing.description ?  createInput('description') : <p className='description' onClick={handleClick}>{description}</p>}\n    </div>)\n}\n\nexport default Work\n","import React from 'react'\n\n\nconst WorkForm = (props) => {\n\n\n  const {\n    node,\n    experience,\n    handleChange,\n    handleSubmit\n  } = props\n\n  const { \n    organization, \n    position, \n    from, \n    to, \n    description \n  } = experience\n\n\n  return (\n    <form  onSubmit={handleSubmit} ref={node} className='work-form'>\n      <button onClick={handleSubmit} className='cancel-button'>X</button>\n      <label>Organization</label>\n      <input \n        name='organization' \n        value={organization}\n        onChange={handleChange}\n        placeholder='Organization'\n        className='work-input'\n        required\n      />\n      <label>Postition</label>\n      <input \n        name='position' \n        value={position}\n        onChange={handleChange}\n        placeholder='Position'\n        className='work-input'\n        required\n      />\n      <div className='date-container'>\n        <div>\n          <label>From</label>\n          <input \n            type='date'\n            name='from'\n            value={from}\n            onChange={handleChange}\n            className='date-input'\n            required\n          />\n        </div>\n        <div>\n          <label>To</label>\n          <input \n            type='date'\n            name='to'\n            value={to}\n            onChange={handleChange}\n            className='date-input'\n            required\n          />\n        </div>\n      </div>\n      <label>Description</label>\n        <textarea\n          name='description'\n          value={description}\n          onChange={handleChange}\n          className='work-input description'\n          rows={5}\n          required\n        />\n      <button type='submit' className='create-work-btn'>Create</button>\n    </form>\n  )\n}\n\nexport default WorkForm\n","import React, { useState } from 'react'\nimport Work from './Work'\nimport WorkForm from './WorkForm'\nimport uniqid from 'uniqid'\n\nimport '../styles/workExperience.css'\n\nconst WorkSection = (props) => {\n  const { preview } = props\n\n  const [ editing, setEditing] = useState(false)\n  const [ experiences, setExperiences] = useState([])\n  const [ experience, setExperience ] = useState({\n    organization: '',\n    position: '',\n    from: '',\n    to: '',\n    description: '',\n    id: uniqid()\n  })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setEditing(false)\n    if(e.target.textContent !== 'X') {\n      setExperiences([...experiences, experience])\n      setExperience({\n        organization: '',\n        position: '',\n        from: '',\n        to: '',\n        description: '',\n        id: uniqid()\n      })\n    }\n  }\n\n  const handleChange = (e) => {\n    const { value, name } = e.target\n    setExperience({...experience, [name]: value})\n  }\n\n  const handleClick = () =>  {\n    setEditing(true)\n  }\n\n  const allWork = experiences.map(experience => \n    <Work \n      experience={experience} \n      key={experience.id} \n      experiences={experiences} \n      setExperiences={setExperiences}\n      preview={preview}\n      />\n  )\n  \n  if (preview === false ){\n    return (\n      <div className={'work-section'}>\n        <div className='header'>\n          <h2 className='header-text'>Work Experience</h2>\n          { editing ? <WorkForm\n                        experience={experience}\n                        className='work-form'\n                        handleChange={handleChange}\n                        handleSubmit={handleSubmit}\n                      /> : null }\n          { editing ? null : <button onClick={handleClick} className='header-button'>+</button> }\n        </div>\n        <div className='work-container'>\n            {allWork}\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className={'work-section'}>\n        <div className='header'>\n          <h2 className='header-text'>Work Experience</h2>\n          <div className='work-container'>\n            {allWork}\n          </div>\n        </div>\n      </div>\n    )\n  }\n  \n}\n\nexport default WorkSection","import React, { useState } from 'react'\n\nconst Reference = (props) => {\n  const {reference, references, setReferences, preview } = props\n  const  {name, relationship, email, phone } = reference\n\n  const [ editing, setEditing ] = useState({\n    name: false,\n    relationship: false,\n    email: false,\n    phone: false\n  })\n\n  const [ editedReference, setEditedReference ] = useState(reference)\n\n  const handleClick = (e) => {\n    const name = e.target.className.split('-')[1]\n    if (preview === false) { setEditing({...editing, [name]: true}) }\n  }\n\n  const handleSubmit = (e) => {\n    const name = e.target[0].name\n    e.preventDefault()\n    const updatedReferences = references.map(reference => {\n      if (reference.id === editedReference.id) {\n        return editedReference\n      } else {\n        return reference\n      }\n    })\n    setReferences(updatedReferences)\n    setEditing({...editing, [name]: false})\n  }\n\n  const handleChange = (e) =>  {\n    const { value, name } = e.target\n    setEditedReference({...reference, [name]: value})\n  }\n\n  const createInput = (key) =>  {\n    return (\n      <form onSubmit={handleSubmit} className='reference-edit-form'>\n        <label>{key}</label>\n        <input \n          type={(key !== 'to' && key !== 'from') ? 'text' : 'date'}\n          name={key}\n          value={editedReference[key]}\n          onChange={handleChange}\n          className={`edit-${key}`}\n        /> \n        <button>Update</button>\n      </form>\n    )\n  }\n\n  return (\n    <div className='reference'>\n      { editing.name ? \n          createInput('name') : \n          <h3 className='reference-name'onClick={handleClick}>{name}</h3>\n      }\n      { editing.relationship ? \n          createInput('relationship') : \n          <h4 className='reference-relationship' onClick={handleClick}>{relationship}</h4>\n      }\n      <div>\n        { editing.email ? \n            createInput('email') : \n            <p className='reference-email' onClick={handleClick}>{email}</p>\n        }\n        { editing.phone ? \n            createInput('phone') : \n            <p className='reference-phone' onClick={handleClick}>{phone}</p>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Reference\n","import React from 'react'\n\nconst ReferenceForm = (props) => {\n  const {\n    reference,\n    handleChange,\n    handleSubmit\n  } = props\n\n  const {\n    name, \n    relationship,\n    email,\n    phone\n  } = reference\n\n  return (\n    <form onSubmit={handleSubmit} className='reference-form'>\n      <label>Name</label>\n      <input \n        name='name'\n        value={name}\n        onChange={handleChange}\n        placeholder='Name'\n        required\n      />\n      <label>Relationship</label>\n      <input \n        name='relationship'\n        value={relationship}\n        onChange={handleChange}\n        placeholder='Relationship'\n        required\n      />\n      <label>Email</label>\n      <input \n        name='email'\n        value={email}\n        onChange={handleChange}\n        placeholder='Email'\n        required\n      />\n      <label>Phone</label>\n      <input \n        name='phone'\n        value={phone}\n        onChange={handleChange}\n        placeholder='Phone'\n        required\n      />\n      <button type='submit'>Create</button>\n    </form>\n  )\n}\n\nexport default ReferenceForm","import React, { useState } from 'react'\nimport uniqid from 'uniqid'\n\nimport Reference from './Reference'\nimport ReferenceForm from './ReferenceForm'\n\nimport '../styles/reference.css'\n\nconst ReferenceSection = (props) => {\n  const { preview } = props\n\n  const [ editing, setEditing] = useState(false)\n\n  const [ references, setReferences ] = useState([])         \n  const [ reference, setReference ] = useState({  \n    name: '',\n    relationship: '',\n    email: '',\n    phone: '',\n    id: uniqid()\n  }) \n\n  const allReferences = references.map(reference => \n    <Reference \n      reference={reference} \n      key={reference.id}\n      references={references}\n      setReferences={setReferences}\n      preview={preview}\n    />\n  )\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setEditing(false)\n    setReferences([...references, reference])\n    setReference({name: '',\n      relationship: '',\n      email: '',\n      phone: '',\n      id: uniqid()\n    })\n  }\n\n  const handleChange = (e) => {\n    const { value, name } = e.target\n    setReference({...reference, [name]: value})\n  }\n\n  const handleClick = () =>  {\n    setEditing(true)\n  }\n\n  if (preview === false ) {\n    return (\n      <div className='reference-section'>\n        <div className='header'>\n          <h2 className='header-text'>References</h2>\n          { editing ?  <ReferenceForm\n                          reference={reference}\n                          handleChange={handleChange}\n                          handleSubmit={handleSubmit}\n                        /> : null }\n          { editing ? null : <button onClick={handleClick} className='header-button'>+</button> }\n        </div>\n        <div className='reference-container'>\n          {allReferences}\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className='reference-section'>\n        <div className='header'>\n          <h2 className='header-text'>References</h2>\n          <div className='reference-container'>\n            {allReferences}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default ReferenceSection","\nimport React, { useState } from 'react'\n\nimport './styles/reset.css'\nimport './styles/app.css'\n\nimport ContactInfo from './components/ContactInfo'\nimport SkillSection from './components/SkillSection'\nimport WorkSection from './components/WorkSection'\nimport ReferenceSection from './components/ReferenceSection'\n\nconst App = () => {\n  const [preview, setPreview] = useState(false)\n\n  const handleClick = () => {\n    preview ? setPreview(false) : setPreview(true)\n  }\n\n  return (\n    <div className='app'>\n      <ContactInfo preview={preview}/>\n      <SkillSection preview={preview}/>\n      <WorkSection preview={preview} />\n      <ReferenceSection preview={preview} />\n      <div className='btn-container'>\n        <button onClick={handleClick} className='main-button'>{preview ? 'Edit' : 'Preview'}</button>\n        {preview ? <button className='main-button' onClick={() => window.print()}>Save</button> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}